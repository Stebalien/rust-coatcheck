var searchIndex = {};
searchIndex['coatcheck'] = {"items":[[0,"","coatcheck","# CoatCheck"],[3,"Ticket","","A `Ticket` is an opaque data structure that can be used to claim the associated value."],[3,"ClaimError","","The error yielded when a claim fails."],[12,"kind","","The error kind.",0],[12,"ticket","","The ticket used in the failed claim.",0],[3,"AccessError","","The error yielded an access fails."],[12,"kind","","The error kind.",1],[3,"Tickets","","Iterator that checks-in values in exchange for tickets."],[3,"CoatCheck","","A data structure storing values indexed by tickets."],[4,"ErrorKind","","Coat check error types"],[13,"WrongCoatCheck","","",2],[11,"fmt","","",3],[11,"description","","",2],[11,"description","","",0],[11,"fmt","","",0],[11,"fmt","","",0],[11,"from_error","","",3],[11,"description","","",1],[11,"fmt","","",1],[11,"fmt","","",1],[6,"Item","",""],[11,"next","","",4],[11,"size_hint","","",4],[11,"next_back","","",4],[11,"new","","Constructs a new, empty `CoatCheck<T>`.",5],[11,"with_capacity","","Constructs a new, empty `CoatCheck<T>` with the specified capacity.",5],[11,"capacity","","Returns the number of elements the coat check can hold without reallocating.",5],[11,"len","","The number of checked items.",5],[11,"reserve","","Reserves capacity for at least `additional` more elements to be checked into the given\n`CoatCheck<T>`. The collection may reserve more space to avoid frequent reallocations.",5],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be check into the\ngiven `CoatCheck<T>`. Does nothing if the capacity is already sufficient.",5],[11,"check","","Check a value in and get a `Ticket `in exchange.",5],[11,"check_all","","Check all the items in an iterator and get tickets back.",5],[11,"iter","","Iterate over the items in this `CoatCheck<V>`.",5],[11,"iter_mut","","Mutably iterate over the items in this `CoatCheck<V>`.",5],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of the coat check (from\nstart to end). The coat check cannot be used after calling this.",5],[11,"contains_ticket","","Check if a ticket belongs to this `CoatCheck<V>`.",5],[11,"is_empty","","Check if this `CoatCheck<V>` is empty.",5],[11,"claim","","Claim an item.",5],[11,"get","","Get a reference to the value matching this ticket.",5],[11,"get_mut","","Get a mutable reference to the value matching this ticket.",5],[11,"fmt","","",5],[6,"Output","",""],[11,"index","","",5],[6,"Output","",""],[11,"index_mut","","",5],[11,"default","","",5]],"paths":[[3,"ClaimError"],[3,"AccessError"],[4,"ErrorKind"],[3,"Ticket"],[3,"Tickets"],[3,"CoatCheck"]]};
initSearch(searchIndex);
