var searchIndex = {};
searchIndex['coatcheck'] = {"items":[[0,"","coatcheck","# CoatCheck"],[1,"Ticket","","A `Ticket` is an opaque data structure that can be used to claim the associated value."],[1,"Tickets","",""],[1,"CoatCheck","","A data structure storing values indexed by tickets."],[10,"fmt","","",0],[4,"Item","",""],[10,"next","","",1],[10,"size_hint","","",1],[10,"next_back","","",1],[10,"indexable","","",1],[10,"idx","","",1],[10,"new","","Constructs a new, empty `CoatCheck<T>`.",2],[10,"with_capacity","","Constructs a new, empty `CoatCheck<T>` with the specified capacity.",2],[10,"capacity","","Returns the number of elements the coat check can hold without reallocating.",2],[10,"len","","The number of checked items.",2],[10,"reserve","","Reserves capacity for at least `additional` more elements to be checked into the given\n`CoatCheck<T>`. The collection may reserve more space to avoid frequent reallocations.",2],[10,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be check into the\ngiven `CoatCheck<T>`. Does nothing if the capacity is already sufficient.",2],[10,"check","","Check a value in and get a `Ticket `in exchange.",2],[10,"check_all","","Check all the items in an iterator and get tickets back.",2],[10,"iter","","Iterate over the items in this `CoatCheck<V>`.",2],[10,"iter_mut","","Mutably iterate over the items in this `CoatCheck<V>`.",2],[10,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of the coat check (from\nstart to end). The coat check cannot be used after calling this.",2],[10,"contains_ticket","","Check if a ticket belongs to this `CoatCheck<V>`.",2],[10,"is_empty","","Check if this `CoatCheck<V>` is empty.",2],[10,"claim","","Claim an item.",2],[10,"get","","Get a reference to the value matching this ticket.",2],[10,"get_mut","","Get a mutable reference to the value matching this ticket.",2],[10,"fmt","","",2],[4,"Output","",""],[10,"index","","",2],[4,"Output","",""],[10,"index_mut","","",2],[10,"default","","",2]],"paths":[[1,"Ticket"],[1,"Tickets"],[1,"CoatCheck"]]};
initSearch(searchIndex);
